// Generated by https://quicktype.io

export interface CartSimulation {
    items:                   CartSimulationItem[];
    ratesAndBenefitsData:    RatesAndBenefitsData;
    paymentData:             PaymentData;
    selectableGifts:         any[];
    marketingData:           null;
    postalCode:              null;
    country:                 string;
    logisticsInfo:           LogisticsInfo[];
    messages:                any[];
    purchaseConditions:      PurchaseConditions;
    pickupPoints:            any[];
    subscriptionData:        null;
    totals:                  Total[];
    itemMetadata:            ItemMetadata;
    allowMultipleDeliveries: boolean;
}

export interface ItemMetadata {
    items: ItemMetadataItem[];
}

export interface ItemMetadataItem {
    id:              string;
    seller:          string;
    assemblyOptions: AssemblyOption[];
    catalogProvider: string;
}

export interface AssemblyOption {
    id:          string;
    name:        string;
    required:    boolean;
    inputValues: any;
    composition: null;
}


export interface CartSimulationItem {
    id:                    string;
    requestIndex:          number;
    quantity:              number;
    seller:                string;
    sellerChain:           string[];
    tax:                   number;
    priceValidUntil:       string;
    price:                 number;
    listPrice:             number;
    rewardValue:           number;
    sellingPrice:          number;
    offerings:             any[];
    priceTags:             PriceTag[];
    measurementUnit:       string;
    unitMultiplier:        number;
    parentItemIndex:       null;
    parentAssemblyBinding: null;
    availability:          string;
    catalogProvider:       string;
    priceDefinition:       PriceDefinition;
}

export interface PriceDefinition {
    calculatedSellingPrice: number;
    total:                  number;
    sellingPrices:          SellingPrice[];
}

export interface SellingPrice {
    value:    number;
    quantity: number;
}

export interface PriceTag {
    name:         string;
    value:        number;
    rawValue:     number;
    isPercentual: boolean;
    identifier:   null;
    owner:        string;
}

export interface LogisticsInfo {
    itemIndex:               number;
    addressId:               null;
    selectedSla:             null;
    selectedDeliveryChannel: null;
    quantity:                number;
    shipsTo:                 string[];
    slas:                    any[];
    deliveryChannels:        DeliveryChannel[];
}

export interface DeliveryChannel {
    id: string;
}

export interface PaymentData {
    installmentOptions:    InstallmentOption[];
    paymentSystems:        PaymentSystem[];
    payments:              any[];
    giftCards:             any[];
    giftCardMessages:      any[];
    availableAccounts:     any[];
    availableTokens:       any[];
    availableAssociations: AvailableAssociations;
}

export interface AvailableAssociations {
}

export interface InstallmentOption {
    paymentSystem:    string;
    bin:              null;
    paymentName:      string;
    paymentGroupName: string;
    value:            number;
    installments:     Installment[];
}

export interface Installment {
    count:                       number;
    hasInterestRate:             boolean;
    interestRate:                number;
    value:                       number;
    total:                       number;
    sellerMerchantInstallments?: Installment[];
    id?:                         ID;
}

export enum ID {
    Experimentality = "EXPERIMENTALITY",
}

export interface PaymentSystem {
    id:                     number;
    name:                   string;
    groupName:              string;
    validator:              null;
    stringId:               string;
    template:               string;
    requiresDocument:       boolean;
    displayDocument:        boolean;
    isCustom:               boolean;
    description:            null | string;
    requiresAuthentication: boolean;
    dueDate:                string;
    availablePayments:      null;
}

export interface PurchaseConditions {
    itemPurchaseConditions: ItemPurchaseCondition[];
}

export interface ItemPurchaseCondition {
    id:          string;
    seller:      string;
    sellerChain: string[];
    slas:        any[];
    price:       number;
    listPrice:   number;
}

export interface RatesAndBenefitsData {
    rateAndBenefitsIdentifiers: RateAndBenefitsIdentifier[];
    teaser:                     any[];
}

export interface RateAndBenefitsIdentifier {
    id:                string;
    name:              string;
    featured:          boolean;
    description:       null;
    matchedParameters: AvailableAssociations;
    additionalInfo:    null;
}

export interface Total {
    id:    string;
    name:  string;
    value: number;
}
